#########################################
### LECTURE 7 CODE
### KATIE COLBORN
### BIOS 6640 FALL 2018
#########################################

op <- par()
options(width=80)
emptyenv()
rm(list=ls())

x <- 1:10
sd(x)
var <- function(x, na.rm = TRUE) 100
sd(x)

# Our definition of var does not mess things up because sd searches
# in the namespace environment, not in the global environment

# Another example from the book

plus <- function(x) {
  function(y) x + y
}
plus_one <- plus(1) # assigned x to one; still need to give it a y value when you execute function
plus(1)
plus_one  # saved copy of plus where you've bound x to 1
plus_one(1)
identical(parent.env(environment(plus_one)), environment(plus))


# Example of calling environments
x <- 168.23
f2 <- function() {
  x <- 100 # generated in enclosing environment of f2 so not 168.23
  function() {
    def <- get("x", environment()) # where is f2 looking up x?
    cll <- get("x", parent.frame())
    list(defined = def, called = cll)
  }
}

g2 <- f2()
str(g2())






